// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "FlipperSub.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

FlipperSub::FlipperSub() : Subsystem("FlipperSub") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    flipperMotor = RobotMap::flipperSubflipperMotor;
    limitFipper = RobotMap::flipperSublimitFipper;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    state = true;

    x = 0;

}

void FlipperSub::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

bool FlipperSub::getState(){

	return state;

}


void FlipperSub::stop(){

	flipperMotor->Set(0.0);
}

void FlipperSub::fipDown(){

	while(limitFipper.get()->Get() == 1){
		flipperMotor->Set(0.2);
	}
	SmartDashboard::PutNumber("limit", limitFipper.get()->Get());
	flipperMotor->Set(0.0);

	state = true;

}

void FlipperSub::fipUp(){

	flipperMotor->Set(-0.2);//orginally -0.2
	state = false;

}

void FlipperSub::fipLock(){

	flipperMotor->Set(-0.6);//orginally -0.2

}

void FlipperSub::resetTimer(){

	x = 0;

}
